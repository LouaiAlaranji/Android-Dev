////////////////////////////////// activity_main xml ///////////////////////////////////////////////////////
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"

    android:orientation="vertical"
    tools:context=".MainActivity">

    <ListView
        android:id="@+id/list_view"

        android:layout_width="409dp"
        android:layout_height="665dp"
        tools:layout_editor_absoluteX="1dp"
        tools:layout_editor_absoluteY="1dp" />

    <Button
        android:id="@+id/createBtn"
        android:layout_width="141dp"
        android:layout_height="64dp"
        android:layout_gravity="bottom"
        android:text="create "

        />

</LinearLayout>

//////////////////////////////// MainActivity ///////////////////////////////////////////////////////////
package com.example.todolist_lab01

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.Button
import android.widget.ListView

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // showing the list on the Main Activity
        val listView = findViewById<ListView>(R.id.list_view)

        listView.adapter = ArrayAdapter<ToDo>(
            this,
            android.R.layout.simple_list_item_1,
            android.R.id.text1,
            toDoRepository.getAllToDos()
        )

        // On Click to go to the edit page when item is clicked
        listView.setOnItemClickListener { adapterView, view, i, l ->
            val ad = listView.adapter as ArrayAdapter<ToDo>;
            val toDoItem = ad.getItem(i);
            val itemClickedId = toDoItem?.id;

            val intent = Intent(
                this, ViewToDoActivity::class.java)
            intent.putExtra("CLICKED_ID", itemClickedId);
            startActivity(intent);
        }

        // connecting my button to another ViewToDoActivity
        val createBtn = findViewById<Button>(R.id.createBtn);

        createBtn.setOnClickListener {
            val intent = Intent(
                this,
                CreateToDoActivity::class.java
            )
            startActivity(intent)






        }


    }
}

////////////////// simple_list_item_1.xml /////////////////////////
<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2006 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
  
          http://www.apache.org/licenses/LICENSE-2.0
  
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<TextView xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@android:id/text1"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:textAppearance="?android:attr/textAppearanceListItemSmall"
    android:gravity="center_vertical"
    android:paddingStart="?android:attr/listPreferredItemPaddingStart"
    android:paddingEnd="?android:attr/listPreferredItemPaddingEnd"
    android:minHeight="?android:attr/listPreferredItemHeightSmall" />

////////////////////////// ToDo.kt //////////////////////////////

package com.example.todolist_lab01

data class ToDo(
    val id: Int,
    var title: String,
    var content: String
){

    override fun toString() = title

}

/////////////////////// toDoRespository.kt ////////////////////////////////////////////

package com.example.todolist_lab01

// Global variable used to store all ToDos.
// this is gonna displayed on screen

val toDoRepository = ToDoRepository().apply {
    // Let's add two initial ToDos.
    addToDo(
        "Feed the pets",
        "Give the cat a fish and the dog a cat."
    )
    addToDo(
        "Exercise",
        "Take a walk and listen to music."
    )
    addToDo(
        "Feed the pets",
        "Give the cat a fish and the dog a cat."
    )
}

class ToDoRepository{

    private val toDos = mutableListOf<ToDo>()

    fun addToDo(title: String, content: String): Int{
        val id = when {
            toDos.count() == 0 -> 1
            else -> toDos.last().id+1
        }
        toDos.add(ToDo(
            id,
            title,
            content
        ))
        return id
    }

    fun getAllToDos() = toDos

    fun getToDoById(id: Int) =
        toDos.find {
            it.id == id
        }

    fun deleteToDoById(id: Int) =
        toDos.remove(
            toDos.find {
                it.id == id
            }
        )

    fun updateToDoById(id: Int, newTitle: String, newContent: String){

        getToDoById(id)?.run{
            title = newTitle
            content = newContent
        }

    }

}

//////////////////// activity_view_to_do.xml ///////////////////////////////////
<?xml version="1.0" encoding="utf-8"?>


<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".ViewToDoActivity"

    >

    <TextView
        android:id="@+id/to_do_title_text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Title"

        />

    <TextView
        android:id="@+id/to_do_content_text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Content" />

    <Button
        android:layout_gravity="bottom"
        android:id="@+id/deleteBtn"
        android:layout_width="126dp"
        android:layout_height="55dp"
        android:text="Delete" />

    <Button
        android:id="@+id/updateBtn"
        android:layout_width="119dp"
        android:layout_height="63dp"
        android:layout_gravity="bottom"
        android:text="Update" />

</LinearLayout>

///////////////////// ViewToDoActivity.kt//////////////////////////////////////

package com.example.todolist_lab01

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.ListView
import android.widget.TextView
import androidx.appcompat.app.AlertDialog


class ViewToDoActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_view_to_do)

        // get the item ID clicked on from the Activity Main
        val toDoId = intent.getIntExtra("CLICKED_ID", 0);
        val itemGotten = toDoRepository.getToDoById(toDoId);

        // pass the item's Title and Context
        val title = findViewById<TextView>(R.id.to_do_title_text_view);
        title.text = itemGotten?.title;
        val content = findViewById<TextView>(R.id.to_do_content_text_view);
        content.text = itemGotten?.content;



        val deleteBtn = findViewById<Button>(R.id.deleteBtn);
        deleteBtn.setOnClickListener{
            AlertDialog.Builder(this)
                .setTitle("Delete ToDo")
                .setMessage("Do you really want to delete it?")
                .setPositiveButton(
                    "Yes"
                ) { dialog, whichButton ->
                    // Delete it.
                }.setNegativeButton(
                    "No"
                ) { dialog, whichButton ->
                    // Do not delete it.
                }.show()
        }


    }
}

/////////////////////////// activity_create_to_do_xml ///////////////////////////////////

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/linearLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".CreateToDoActivity">


    <EditText
        android:id="@+id/createFieldName"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="textPersonName"
        android:text="Name"
        tools:layout_editor_absoluteX="71dp"
        tools:layout_editor_absoluteY="34dp" />

    <EditText
        android:id="@+id/createFieldContext"
        android:layout_width="408dp"
        android:layout_height="550dp"
        android:ems="10"
        android:inputType="textPersonName"
        android:text="Name"
        tools:layout_editor_absoluteX="1dp"
        tools:layout_editor_absoluteY="103dp" />

    <Button
        android:id="@+id/saveBtn"
        android:layout_width="103dp"
        android:layout_height="63dp"
        android:text="Save"
        tools:layout_editor_absoluteX="145dp"
        tools:layout_editor_absoluteY="662dp" />

</LinearLayout>

/////////////////////////// CreateToDoActivity.kt ///////////////////////////////

package com.example.todolist_lab01

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.EditText

class CreateToDoActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_create_to_do)

        val title = findViewById<EditText>(
            R.id.createFieldName
        ).editableText.toString()

        val context = findViewById<EditText>(
            R.id.createFieldContext
        ).editableText.toString()


        // click on saveBtn
         val saveBtn = findViewById<Button>(R.id.saveBtn);
        saveBtn.setOnClickListener {
            // Save changes
            


            // button takes me back to MainActivity
            val intent = Intent (
                this, MainActivity::class.java
            )
            finish();
    }


}



}




